# version: '3.8'

services:
  # Database
  db:
    image: postgres:15
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres} -d ${POSTGRES_DB:-courseapp}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-redis_password}
    volumes:
      - redis_data:/data
    networks:
      - app_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD:-redis_password}", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Backend Django Application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"  # Expose backend for development
    env_file:
      - .env
    volumes:
      - ./backend:/app
      - media_files:/app/media
      - static_files:/app/staticfiles
      - ./backend/logs:/app/logs
    networks:
      - app_network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev  # Make sure this is correct
    ports:
      - "3000:3000"
    environment:
      - VITE_API_BASE_URL=http://51.178.87.234:8000
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./frontend/my-app:/app
      - /app/node_modules
    networks:
      - app_network
    depends_on:
      - backend
    restart: unless-stopped
    stdin_open: true
    tty: true

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  media_files:
    driver: local
  static_files:
    driver: local