# Generated by Django 5.2.4 on 2025-10-05 23:25

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('user', '0020_coursecontent_status_module_status'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='qcmoption',
            options={'ordering': ['order']},
        ),
        migrations.AddField(
            model_name='contenttype',
            name='display_name',
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AddField(
            model_name='course',
            name='estimated_duration',
            field=models.IntegerField(default=0, help_text='Total course duration in minutes', validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='course',
            name='min_required_time',
            field=models.IntegerField(default=0, help_text='Minimum time required to complete in minutes', validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='coursecontent',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='coursecontent',
            name='estimated_duration',
            field=models.IntegerField(default=0, help_text='Content duration in minutes', validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='coursecontent',
            name='min_required_time',
            field=models.IntegerField(default=0, help_text='Minimum time required for content in minutes', validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='coursecontent',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='module',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='module',
            name='estimated_duration',
            field=models.IntegerField(default=0, help_text='Module total duration in minutes', validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='module',
            name='min_required_time',
            field=models.IntegerField(default=0, help_text='Minimum time required for module in minutes', validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='module',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.AddField(
            model_name='pdfcontent',
            name='estimated_reading_time',
            field=models.IntegerField(default=0, help_text='Estimated reading time in minutes', validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='pdfcontent',
            name='page_count',
            field=models.IntegerField(default=0, help_text='Number of pages in PDF', validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AddField(
            model_name='qcm',
            name='question_type',
            field=models.CharField(choices=[('single', 'Single Choice'), ('multiple', 'Multiple Choice')], default='single', max_length=10),
        ),
        migrations.AddField(
            model_name='qcmoption',
            name='order',
            field=models.PositiveIntegerField(default=0),
        ),
        migrations.AddField(
            model_name='subscription',
            name='average_time_per_session',
            field=models.IntegerField(default=0, help_text='Average session time in seconds'),
        ),
        migrations.AddField(
            model_name='subscription',
            name='completed_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='subscription',
            name='is_completed',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='subscription',
            name='total_time_spent',
            field=models.IntegerField(default=0, help_text='Total time spent on course in seconds'),
        ),
        migrations.AddField(
            model_name='videocontent',
            name='duration',
            field=models.IntegerField(default=0, help_text='Video duration in seconds', validators=[django.core.validators.MinValueValidator(0)]),
        ),
        migrations.AlterUniqueTogether(
            name='subscription',
            unique_together={('user', 'course')},
        ),
        migrations.CreateModel(
            name='ChatMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_read', models.BooleanField(default=False)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_messages', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_messages', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['timestamp'],
            },
        ),
        migrations.CreateModel(
            name='TimeTracking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField()),
                ('duration', models.IntegerField(help_text='Duration in seconds')),
                ('session_type', models.CharField(choices=[('course', 'Course'), ('module', 'Module'), ('content', 'Content')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('content', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.coursecontent')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='user.course')),
                ('module', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='user.module')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'indexes': [models.Index(fields=['user', 'course'], name='user_timetr_user_id_cc8bdb_idx'), models.Index(fields=['user', 'content'], name='user_timetr_user_id_de0b20_idx')],
            },
        ),
    ]
